<?php
/*
 *  Copyright 2022.  Baks.dev <admin@baks.dev>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 */

namespace BaksDev\Wildberries\Repository\AllSettings;


use BaksDev\Auth\Email\Entity\Account;
use BaksDev\Auth\Email\Entity\Event\AccountEvent;
use BaksDev\Auth\Email\Entity\Status\AccountStatus;
use BaksDev\Core\Form\Search\SearchDTO;
use BaksDev\Users\Profile\UserProfile\Entity\Avatar\UserProfileAvatar;
use BaksDev\Users\Profile\UserProfile\Entity\Event\UserProfileEvent;
use BaksDev\Users\Profile\UserProfile\Entity\Info\UserProfileInfo;
use BaksDev\Users\Profile\UserProfile\Entity\Personal\UserProfilePersonal;
use BaksDev\Users\Profile\UserProfile\Entity\UserProfile;
use BaksDev\Wildberries\Entity\Event\WbTokenEvent;
use BaksDev\Wildberries\Entity\WbToken;
use Doctrine\DBAL\Connection;

final class AllWbTokens implements AllWbTokensInterface
{

    private Connection $connection;

    public function __construct(Connection $connection)
    {
        $this->connection = $connection;
    }

    public function get(SearchDTO $search)
    {
        $qb = $this->connection->createQueryBuilder();

        $qb->select('token.id');
        $qb->addSelect('token.event');
        $qb->from(WbToken::TABLE, 'token');


        $qb->addSelect('event.active');
        $qb->join('token', WbTokenEvent::TABLE, 'event', 'event.id = token.event AND event.profile = token.id');


        /** User Profile */

        $qb->join('event', UserProfile::TABLE, 'users_profile', 'users_profile.id = event.profile');

        $qb->addSelect('users_profile_info.status AS profile_status');
        $qb->addSelect('users_profile_info.url AS profile_url');
        $qb->join(
            'users_profile',
            UserProfileInfo::TABLE,
            'users_profile_info',
            'users_profile_info.profile = users_profile.id'
        );

        $qb->join(
            'users_profile',
            UserProfileEvent::TABLE,
            'users_profile_event',
            'users_profile_event.id = users_profile.event AND users_profile_event.profile = users_profile.id'
        );


        $qb->addSelect('users_profile_personal.username');
        $qb->addSelect('users_profile_personal.location');
        $qb->join(
            'users_profile_event',
            UserProfilePersonal::TABLE,
            'users_profile_personal',
            'users_profile_personal.event_id = users_profile_event.id'
        );


        $qb->addSelect('users_profile_avatar.name AS avatar_name');
        $qb->addSelect('users_profile_avatar.dir AS avatar_dir');
        $qb->addSelect('users_profile_avatar.ext AS avatar_ext');
        $qb->addSelect('users_profile_avatar.cdn AS avatar_cdn');

        $qb->leftJoin(
            'users_profile_event',
            UserProfileAvatar::TABLE,
            'users_profile_avatar',
            'users_profile_avatar.event_id = users_profile_event.id'
        );


        /** ACCOUNT */

        $qb->join(
            'users_profile_info',
            Account::TABLE,
            'account',
            'account.id = users_profile_info.user_id'
        );

        $qb->addSelect('account_event.email');
        $qb->join(
            'account',
            AccountEvent::TABLE,
            'account_event',
            'account_event.id = account.event AND account_event.account = account.id'
        );


        $qb->addSelect('account_status.status as account_status');
        $qb->join(
            'account_event',
            AccountStatus::TABLE,
            'account_status',
            'account_status.event_id = account_event.id'
        );


        return $qb;
    }

}